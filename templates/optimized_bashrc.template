# Optimized Bash Configuration - Generated by Unified Dotfiles Framework
# This configuration is optimized for fast shell startup

# Performance optimization: Early exit for non-interactive shells
[[ $- != *i* ]] && return

# Performance optimization: Lazy loading framework
DEFERRED_INIT_COMMANDS=()

# Lazy loading function
lazy_load() {
    local func_name="$1"
    local load_cmd="$2"
    
    eval "$func_name() {
        unset -f \$func_name
        \$load_cmd
        \$func_name \"\$@\"
    }"
}

# Conditional loading based on command existence
load_if_exists() {
    local cmd="$1"
    local load_cmd="$2"
    
    if command -v "\$cmd" >/dev/null 2>&1; then
        eval "\$load_cmd"
    fi
}

# Deferred initialization
defer_init() {
    local init_cmd="$1"
    DEFERRED_INIT_COMMANDS+=("\$init_cmd")
}

# Execute deferred initializations
execute_deferred_init() {
    for cmd in "\${DEFERRED_INIT_COMMANDS[@]}"; do
        eval "\$cmd"
    done
    unset DEFERRED_INIT_COMMANDS
}

# Essential PATH setup (needed immediately)
{{#if HOMEBREW_PREFIX}}
export PATH="{{HOMEBREW_PREFIX}}/bin:{{HOMEBREW_PREFIX}}/sbin:\$PATH"
{{/if}}
{{#if LOCAL_BIN_PATH}}
export PATH="{{LOCAL_BIN_PATH}}:\$PATH"
{{/if}}

# Essential environment variables
export EDITOR="${EDITOR:-{{DEFAULT_EDITOR}}}"
export PAGER="${PAGER:-less}"
export LANG="${LANG:-en_US.UTF-8}"

# History configuration (immediate)
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTCONTROL=ignoreboth:erasedups
shopt -s histappend

# Basic shell options (immediate)
shopt -s checkwinsize
shopt -s cdspell
shopt -s dirspell
shopt -s globstar 2>/dev/null || true

# Defer expensive operations
{{#if ENABLE_COMPLETIONS}}
defer_init "load_bash_completions"
{{/if}}

{{#if ENABLE_ALIASES}}
defer_init "load_aliases"
{{/if}}

{{#if ENABLE_FUNCTIONS}}
defer_init "load_functions"
{{/if}}

# Lazy load completions
load_bash_completions() {
    # Load system completions
    if [[ -f /etc/bash_completion ]]; then
        source /etc/bash_completion
    elif [[ -f /usr/share/bash-completion/bash_completion ]]; then
        source /usr/share/bash-completion/bash_completion
    fi
    
    # Load Homebrew completions
    {{#if HOMEBREW_PREFIX}}
    if [[ -r "{{HOMEBREW_PREFIX}}/etc/profile.d/bash_completion.sh" ]]; then
        source "{{HOMEBREW_PREFIX}}/etc/profile.d/bash_completion.sh"
    fi
    {{/if}}
}

# Load aliases
load_aliases() {
    {{#each ALIAS_FILES}}
    [[ -f "{{this}}" ]] && source "{{this}}"
    {{/each}}
}

# Load functions
load_functions() {
    {{#each FUNCTION_FILES}}
    [[ -f "{{this}}" ]] && source "{{this}}"
    {{/each}}
}

# Lazy load development tools
{{#if ENABLE_NVM}}
lazy_load 'nvm' 'load_nvm'
load_nvm() {
    export NVM_DIR="$HOME/.nvm"
    [[ -s "$NVM_DIR/nvm.sh" ]] && source "$NVM_DIR/nvm.sh"
    [[ -s "$NVM_DIR/bash_completion" ]] && source "$NVM_DIR/bash_completion"
}
{{/if}}

{{#if ENABLE_RBENV}}
lazy_load 'rbenv' 'load_rbenv'
load_rbenv() {
    if command -v rbenv >/dev/null 2>&1; then
        eval "$(rbenv init -)"
    fi
}
{{/if}}

{{#if ENABLE_PYENV}}
lazy_load 'pyenv' 'load_pyenv'
load_pyenv() {
    if command -v pyenv >/dev/null 2>&1; then
        eval "$(pyenv init -)"
    fi
}
{{/if}}

# Prompt setup (immediate for responsiveness)
{{#if CUSTOM_PROMPT}}
{{{CUSTOM_PROMPT}}}
{{else}}
# Simple, fast prompt
PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
{{/if}}

# Execute deferred initializations on first prompt
if [[ -n "${DEFERRED_INIT_COMMANDS:-}" ]]; then
    # Use PROMPT_COMMAND to execute once
    ORIGINAL_PROMPT_COMMAND="${PROMPT_COMMAND:-}"
    PROMPT_COMMAND="execute_deferred_init; PROMPT_COMMAND='${ORIGINAL_PROMPT_COMMAND}'; unset ORIGINAL_PROMPT_COMMAND"
fi

# Local customizations (loaded last)
{{#each LOCAL_CONFIG_FILES}}
[[ -f "{{this}}" ]] && source "{{this}}"
{{/each}}